Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
  DynamoDBIndexesLeagueMatches:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "DynamoDBIndexes-LeagueMatches"
      AttributeDefinitions:
        - AttributeName: "matchDate"
          AttributeType: "S"
        - AttributeName: "matchTime"
          AttributeType: "S"
        - AttributeName: "homeTeam"
          AttributeType: "S"
        - AttributeName: "awayTeam"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "matchDate"
          KeyType: "HASH"
        - AttributeName: "matchTime"
          KeyType: "RANGE"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: "HomeTeamMatchesIndex"
          KeySchema:
            - AttributeName: "homeTeam"
              KeyType: "HASH"
            - AttributeName: "matchDate"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "AwayTeamMatchesIndex"
          KeySchema:
            - AttributeName: "awayTeam"
              KeyType: "HASH"
            - AttributeName: "matchDate"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
  InitFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require('./cfn-response');
          const docClient = new AWS.DynamoDB.DocumentClient();
          exports.handler = function(event, context) {
            console.log(JSON.stringify(event,null,2));
            var params = {
              RequestItems: {
                "DynamoDBIndexes-LeagueMatches": [
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-07",
                        matchTime: "6",
                        homeTeam: "Angels",
                        awayTeam: "Red Sox",
                        homeTeamScore: "54",
                        awayTeamScore: "100"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-07",
                        matchTime: "7",
                        homeTeam: "Mets",
                        awayTeam: "Dodgers",
                        homeTeamScore: "73",
                        awayTeamScore: "62"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-07",
                        matchTime: "8",
                        homeTeam: "Blue Jays",
                        awayTeam: "Giants",
                        homeTeamScore: "11",
                        awayTeamScore: "37"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-14",
                        matchTime: "6",
                        homeTeam: "Blue Jays",
                        awayTeam: "Red Sox",
                        homeTeamScore: "67",
                        awayTeamScore: "66"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-14",
                        matchTime: "7",
                        homeTeam: "Mets",
                        awayTeam: "Giants",
                        homeTeamScore: "97",
                        awayTeamScore: "21"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-14",
                        matchTime: "8",
                        homeTeam: "Dodgers",
                        awayTeam: "Angels",
                        homeTeamScore: "73",
                        awayTeamScore: "74"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-21",
                        matchTime: "6",
                        homeTeam: "Red Sox",
                        awayTeam: "Mets",
                        homeTeamScore: "-",
                        awayTeamScore: "-"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-21",
                        matchTime: "7",
                        homeTeam: "Blue Jays",
                        awayTeam: "Angels",
                        homeTeamScore: "-",
                        awayTeamScore: "-"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-21",
                        matchTime: "8",
                        homeTeam: "Giants",
                        awayTeam: "Dodgers",
                        homeTeamScore: "-",
                        awayTeamScore: "-"
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        matchDate: "2020-10-23",
                        matchTime: "8",
                        homeTeam: "Giants",
                        awayTeam: "Yankees",
                        homeTeamScore: "34",
                        awayTeamScore: "28"
                      }
                    }
                  }
                ]
              }
            };
            docClient.batchWrite(params, function(err, data) {
              if (err) {
                response.send(event, context, "FAILED", {});
              } else {
                response.send(event, context, "SUCCESS", {});
              }
            });
          };
      Handler: index.handler
      Role:
        Fn::GetAtt: [ LambdaRole , "Arn" ]
      Runtime: nodejs12.x
      Timeout: 60
  InitializeLeagueMatchesTable:
    Type: Custom::InitFunction
    DependsOn: DynamoDBIndexesLeagueMatches
    Properties:
      ServiceToken:
        Fn::GetAtt: [ InitFunction , "Arn" ]
      DynamoTableName:
        Ref: DynamoDBIndexesLeagueMatches
