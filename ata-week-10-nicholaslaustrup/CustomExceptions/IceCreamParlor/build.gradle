plugins {
    id 'ata-curriculum.snippets-conventions'
}

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit1/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

dependencies {
    // Use JUnit test framework.
    implementation('com.amazonaws:aws-java-sdk-s3:1.12.153')
    implementation(platform('org.junit:junit-bom:5.8.0'))
    implementation('org.junit.jupiter:junit-jupiter')
}

def wflowToTestsMap = [
        'customexceptions-icecreamparlor-phase3': [
                'com.kenzie.icecreamparlor.IceCreamCustomerTest',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase0Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase3Test',
        ],
        'customexceptions-icecreamparlor-phase4': [
                'com.kenzie.icecreamparlor.IceCreamCustomerTest',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase0Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase3Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase4Test',
        ],
        'customexceptions-icecreamparlor-phase5': [
                'com.kenzie.icecreamparlor.IceCreamCustomerTest',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase0Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase3Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase4Test',
                'com.kenzie.icecreamparlor.IceCreamParlorServicePhase5Test',
        ]
]

wflowToTestsMap.forEach { wflowName, testList ->
    tasks.register(wflowName) {
        dependsOn wflowtest
        test.doFirst {
            filter {
                testList.each { includeTestsMatching it }
            }
        }
    }
}
